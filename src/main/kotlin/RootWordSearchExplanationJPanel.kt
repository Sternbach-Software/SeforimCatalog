import javax.swing.*

/**
 *
 * @author shmuel
 */
class RootWordSearchExplanationJPanel(private val searchableTableJPanel: SearchableTableJPanel) : JPanel() {
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private fun initComponents() {
        jPanel1 = JPanel().also { it.isVisible = true }
        jPanel16 = JPanel().also { it.isVisible = false }
        jLabel5 = JLabel()
        jLabel6 = JLabel()
        jToggleButton1 = JToggleButton()
        val rootWordSearchSettingsJPanel = RootWordSearchSettingsJPanel(searchableTableJPanel).also { it.isVisible = false }
        jToggleButton1!!.addItemListener {
            val selected = jToggleButton1!!.isSelected
            rootWordSearchSettingsJPanel.isVisible = selected
            jToggleButton1!!.text = "${if (selected) "Hide" else "Show"} additional options"
            revalidate()
            repaint()
        }
        jLabel5!!.text =
            "<html><body style='width: %1spx'>Root word search determines matching entries by comparing the root words contained in the search phrase with the root words in each catalog entry. Among other things, this removes the need to be concerned with malei/chaseir sensitivity. Only Hebrew is currently supported. Nouns are preserved in their full form (e.g. <font size=5> וּמִמַּאַמְרֵיהֶם</font> is reduced to <font size=5>מַאֲמָר</font> and not אמר), whereas verbs and adjectives are reduced to their root word. However, although the search engine may have a general understanding of dikduk (it sometimes can't figure out the shoresh of a word - this may improve in the future), that does not make it a Talmid Chacham. For example, מאמרי can be read as <font size=5> מַאֲמָרֵי </font>or <font size=5>מֵאִמְרֵי</font>. The first reduces to מאמר and the second reduces to אמר, but without an understanding of the meaning and the context, not even a human would know how to properly punctuate it and therefore determine its shoresh. </body>"
        setShorashim(listOf())
        jToggleButton1!!.text = "Show additional options"
        val layout = GroupLayout(this)
        this.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(
                            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(
                                    jLabel5,
                                    GroupLayout.PREFERRED_SIZE,
                                    1315,
                                    GroupLayout.PREFERRED_SIZE
                                )
                                .addComponent(jToggleButton1)
                                .addComponent(
                                    jLabel6,
                                    GroupLayout.PREFERRED_SIZE,
                                    1315,
                                    GroupLayout.PREFERRED_SIZE
                                )
                                .addComponent(
                                    rootWordSearchSettingsJPanel,
                                    GroupLayout.PREFERRED_SIZE,
                                    GroupLayout.DEFAULT_SIZE,
                                    GroupLayout.PREFERRED_SIZE
                                )
                        )
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                )
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(
                    GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(
                            jLabel5,
                            GroupLayout.PREFERRED_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.PREFERRED_SIZE
                        )
                        .addGap(20, 20, 20)
                        .addComponent(
                            jLabel6,
                            GroupLayout.PREFERRED_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.PREFERRED_SIZE
                        )
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(
                            rootWordSearchSettingsJPanel,
                            GroupLayout.PREFERRED_SIZE,
                            GroupLayout.DEFAULT_SIZE,
                            GroupLayout.PREFERRED_SIZE
                        )
                        .addContainerGap()
                )
        );
    } // </editor-fold>

    fun setShorashim(flatten: List<String>) {
//        println("Set: $flatten")
        jLabel6!!.text = "<html><body style='width: 1%spx'>Search phrase shorashim: ${flatten.joinToString()}"
    }

    // Variables declaration - do not modify
    private var jLabel5: JLabel? = null
    private var jLabel6: JLabel? = null
    private var jPanel1: JPanel? = null
    private var jPanel16: JPanel? = null
    private var jToggleButton1: JToggleButton? = null // End of variables declaration

    /**
     * Creates new form RootWordSearchExplanationJPanel
     */
    init {
        initComponents()
    }
}